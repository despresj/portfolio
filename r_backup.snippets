snippet options
	options(tibble.print_max = 50, tibble.print_min = 50)
	
snippet equatiomatic	
	equatiomatic::extract_eq(model = ${1:fit}, use_coefs = TRUE, show_distribution = TRUE)
	# results='asis' in code chunk to render as LaTex

# my snippets
snippet ins
	install.packages("${1:}")

snippet read
	readr::read_csv(here::here("${1:}"))
	
snippet beepr
	beepr::beep()
	
snippet tidytuesdayR
	tidytuesdayR::use_tidytemplate()

snippet style
	styler:::style_active_file()

snippet here
	here::here("${1:}")

snippet google
	browseURL(paste0("https://www.google.com/search?q=", "${1:}"))

snippet color
	browseURL("https://pkg.garrickadenbuie.com/r-colors-css/#colors")
	
snippet inclass_assignment
	file.copy("In-class Assignment/Inclass_template.Rmd", 
	          "In-class Assignment/inclass${1:}.Rmd", overwrite = FALSE);
	file.edit("In-class Assignment/inclass${1:}.Rmd")

snippet rmd_new
	file.create(here::here("${1:}.rmd"));
	  file.edit(here::here("${1:}.rmd"));
	here::here()

snippet email
	mailR::send.mail(from = "jbirdjojo@gmail.com",
	to = c("${2:}"),
	subject = "${3:Sent Directiy From Rstudio}",
	body = "${4:Dear },",
	attach.files = ${5:NULL},
	smtp = list(host.name = "smtp.gmail.com", port = 465,
	user.name = "jbirdjojo", passwd = Sys.getenv("jbirdjojo_password"), ssl = TRUE),
	authenticate = TRUE, send = TRUE)
	
snippet colab
	browseURL("https://colab.research.google.com/notebook#create=true&language=r")

snippet file_folder
	dirname(rstudioapi::getSourceEditorContext()$path)

snippet mysnippets
		usethis::edit_rstudio_snippets()
	
snippet library(tidyverse)
	library(tidyverse); thematic::thematic_on()
	
snippet library(tidymodels)
	library(tidymodels)


snippet library(MASS
	library(MASS, exclude = "select")
	
snippet complete
	${1:df}	%>% 
	summarise(across(everything(), ~ mean(!is.na(.)))) %>% 
	pivot_longer(cols = everything())

## defaults -----------------------------
#
#snippet #!
#	#!/usr/bin/env Rscript
#
## includes
#
##snippet req
##	require(${1:package})
#snippet source
#	source('${1:file}')
#
## conditionals
#snippet if
#	if (${1:condition}) {
#		${2:code}
#	}
#snippet el
#	else {
#		${1:code}
#	}
#snippet ei
#	else if (${1:condition}) {
#		${2:code}
#	}
#
## functions
#snippet fun
#	${1:name} <- function (${2:}) {
#		${3:code}
#	}
#snippet ret
#	return(${1:code})

# dataframes, lists, etc
#snippet df
#	${1:name}[${2:rows}, ${3:cols}]
#snippet c
#	c(${1:items})
#snippet li
#	list(${1:items})
snippet mat
	matrix(${1:data}, nrow=${2:rows}, ncol=${3:cols})

# apply functions
#snippet apply
#	apply(${1:array}, ${2:margin}, ${3:function})
#snippet lapply
#	lapply(${1:list}, ${2:function})
#snippet sapply
#	lapply(${1:list}, ${2:function})
#snippet vapply
#	vapply(${1:list}, ${2:function}, ${3:type})
#snippet mapply
#	mapply(${1:function}, ${2:...})
#snippet tapply
#	tapply(${1:vector}, ${2:index}, ${3:function})
#snippet rapply
#	rapply(${1:list}, ${2:function})

## plyr functions
#snippet dd
#	ddply(${1:frame}, ${2:variables}, ${3:function})
#snippet dl
#	dlply(${1:frame}, ${2:variables}, ${3:function})
#snippet da
#	daply(${1:frame}, ${2:variables}, ${3:function})
#snippet d_
#	d_ply(${1:frame}, ${2:variables}, ${3:function})
#
#snippet ad
#	adply(${1:array}, ${2:margin}, ${3:function})
#snippet al
#	alply(${1:array}, ${2:margin}, ${3:function})
#snippet aa
#	aaply(${1:array}, ${2:margin}, ${3:function})
#snippet a_
#	a_ply(${1:array}, ${2:margin}, ${3:function})

#snippet ld
#	ldply(${1:list}, ${2:function})
#snippet ll
#	llply(${1:list}, ${2:function})
#snippet la
#	laply(${1:list}, ${2:function})
#snippet l_
#	l_ply(${1:list}, ${2:function})
#
#snippet md
#	mdply(${1:matrix}, ${2:function})
#snippet ml
#	mlply(${1:matrix}, ${2:function})
#snippet ma
#	maply(${1:matrix}, ${2:function})
#snippet m_
#	m_ply(${1:matrix}, ${2:function})

# plot functions
#snippet pl
#	plot(${1:x}, ${2:y})
#
#snippet img
#	${1:(jpeg,bmp,png,tiff)}(filename="${2:filename}", width=${3}, height=${4}, unit="${5}")
#	${6:plot}
#	dev.off()

# statistical test functions
#snippet fis
#	fisher.test(${1:x}, ${2:y})
#snippet chi
#	chisq.test(${1:x}, ${2:y})
#snippet tt
#	t.test(${1:x}, ${2:y})
#snippet wil
#	wilcox.test(${1:x}, ${2:y})
#snippet cor
#	cor.test(${1:x}, ${2:y})
#snippet fte
#	var.test(${1:x}, ${2:y})
#snippet kvt 
#	kv.test(${1:x}, ${2:y})